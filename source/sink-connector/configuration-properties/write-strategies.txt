.. _sink-configuration-write-model-strategy:

=====================================
Sink Connector Write Model Strategies
=====================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

Overview
--------

.. _sink-configuration-write-model-strategy-description-start:

A write model strategy determines how the {+sink-connector+} stores data 
in MongoDB.

The ``writemodel.strategy`` configuration property specifies how the sink connector
*writes data into MongoDB.* You can set this property by using the following syntax:

.. code-block:: properties

   writemodel.strategy=<write model strategy>

Strategies
----------

The following table describes the accepted values for the ``writemodel.strategy``
and ``delete.writemodel.strategy`` properties:

.. _sink-configuration-write-model-strategy-table-start:

.. list-table::
   :header-rows: 1
   :widths: 25 75

   * - Name
     - Description

   * - | **DefaultWriteModelStrategy**
       | 
     - | **Description:**
       | This strategy uses the ``ReplaceOneDefaultStrategy`` by default, and the ``InsertOneDefaultStrategy`` if you set the ``timeseries.timefield`` option.
       | 
       | This is the default value for the ``writemodel.strategy`` configuration setting.

   * - | **InsertOneDefaultStrategy**
       | 
     - | **Description:**
       | Insert each sink record into MongoDB as a document. 
       | Apply the following configuration to your sink connector to specify this setting: 
       
       .. code-block:: properties
           
          writemodel.strategy=com.mongodb.kafka.connect.sink.writemodel.strategy.InsertOneDefaultStrategy

   * - | **ReplaceOneDefaultStrategy**
       |
     - | **Description:**
       | Replaces at most one document in MongoDB that matches a sink record by the ``_id`` field. If no documents match, insert the sink record as a new document.
       | Apply the following configuration to your sink connector to specify this setting: 
       
       .. code-block:: properties
           
          writemodel.strategy=com.mongodb.kafka.connect.sink.writemodel.strategy.ReplaceOneDefaultStrategy

   * - | **ReplaceOneBusinessKeyStrategy**
       | 
     - | **Description:**
       | Replaces at most one document that matches a sink record by a specified business key. If no documents match, insert the sink record as a new document.
       | Apply the following configuration to your sink connector to specify this setting: 
       
       .. code-block:: properties
           
          writemodel.strategy=com.mongodb.kafka.connect.sink.writemodel.strategy.ReplaceOneBusinessKeyStrategy
       
       | To see an example showing how to use this strategy, see our :ref:`guide on write model strategies <kafka-sink-write-model-replace-example>`.
   
   * - | **DeleteOneDefaultStrategy**
       | 
     - | **Description:**
       | Deletes at most one document that matches your sink connector's key structure by the ``_id`` field only when the document contains a null value structure.
       | This is implicitly specified when you set ``mongodb.delete.on.null.values=true``.
       | You can set this explicitly with the following configuration: 
       
       .. code-block:: properties

          writemodel.strategy=com.mongodb.kafka.connect.sink.writemodel.strategy.DeleteOneDefaultStrategy

       .. important:: 

          The DeleteOneDefaultStrategy works only when the ID strategy is 
          FullKeyStrategy, PartialKeyStrategy, or ProvidedInKeyStrategy.

   * - | **DeleteOneBusinessKeyStrategy**
       | 
     - | **Description:**
       | Deletes at most one MongoDB document that matches a sink record by a business key.
       | Apply the following configuration to your sink connector to specify this setting: 
       
       .. code-block:: properties
           
          writemodel.strategy=com.mongodb.kafka.connect.sink.writemodel.strategy.DeleteOneBusinessKeyStrategy

       | To see an example showing how to use this strategy, see our :ref:`guide on write model strategies <kafka-sink-write-model-delete-example>`.

   * - | **UpdateOneTimestampsStrategy**
       | 
     - | **Description:**
       | Add ``_insertedTS`` (inserted timestamp) and ``_modifiedTS`` (modified timestamp) fields into documents.
       | Apply the following configuration to your sink connector to specify this setting: 
       
       .. code-block:: properties
           
          writemodel.strategy=com.mongodb.kafka.connect.sink.writemodel.strategy.UpdateOneTimestampsStrategy

       | To see an example showing how to use this strategy, see our :ref:`guide on write model strategies <kafka-sink-write-model-time-example>`.

   * - | **UpdateOneBusinessKeyTimestampStrategy**
       | 
     - | **Description:**
       | Add ``_insertedTS`` (inserted timestamp) and ``_modifiedTS`` (modified timestamp) fields into documents that match a business key.
       | Apply the following configuration to your sink connector to specify this setting: 
       
       .. code-block:: properties
           
          writemodel.strategy=com.mongodb.kafka.connect.sink.writemodel.strategy.UpdateOneBusinessKeyTimestampStrategy

.. _sink-configuration-write-model-strategy-table-end:

Deleting Data
-------------

You can also specify a delete model strategy, which specifies how the
sink connector *deletes data from MongoDB.* You can set this property by using
the f llowing syntax:The ``delete.writemodel.strategy`` configuration property

.. code-block:: properties

   delete.writemodel.strategy=<write model strategy>

.. _sink-configuration-write-model-strategy-description-end:

.. note::

   You can use different values for ``writemodel.strategy`` and
   ``delete.writemodel.strategy``.

.. include:: /includes/sink-config-link.rst

.. _sink-connector-write-model-strategies:

